@import "library.cocoascript";

var onRun = function(context) {
  
  var doc = context.document;                // the current document (MSDocument)
  var plugin = context.plugin;               // the plugin (MSPluginBundle)
  var page = [doc currentPage];              // the current page (MSPage)
  var artboards = doc.currentPage().artboards();

  // Prompt Dialog
  var userInput = showAlertWindow();

  if(userInput != null) {

    // Create New Artboard
    var newArtboard = [MSArtboardGroup new];
    var newArtboardFrame = [newArtboard frame]
    var numberArtboard = [artboards length];
    var firstArtboard = artboards[numberArtboard-2];

    newArtboard.name = [plugin name]
    newArtboardWidth = [[firstArtboard frame] width]
    newArtboardHeight = [[firstArtboard frame] height]
    newArtboardX = [[firstArtboard frame] x]
    newArtboardY = [[firstArtboard frame] y] - (newArtboardHeight + 300)

    [newArtboardFrame setWidth:newArtboardWidth]
    [newArtboardFrame setHeight:newArtboardHeight]
    [newArtboardFrame setX:newArtboardX]
    [newArtboardFrame setY:newArtboardY]
    [page addLayers: [newArtboard]];

    artboards = doc.currentPage().artboards();
    var coverA = artboards[numberArtboard-1];
    var tableA = artboards[numberArtboard];
    artboards[numberArtboard-1] = tableA;
    artboards[numberArtboard] = coverA;

    // Create Background Rect
    var shape = SketchLib.addShapeLayer(newArtboard, {"name": "background"});
    var shapeFrame = [shape frame]
    [shapeFrame setWidth:newArtboardWidth]
    [shapeFrame setHeight:newArtboardHeight]
    var shapeFill = shape.style().addStylePartOfType(0);
    shapeFill.color = MSColor.colorWithSVGString(userInput.color);

    // Create a new group to contain the new layers (MSLayerGroup)
    var group = SketchLib.addLayerGroup(newArtboard, {"name": [plugin name]});
    var groupFrame = [group frame]
    [groupFrame setWidth:newArtboardWidth]
    [groupFrame setHeight:newArtboardHeight]

    // Create a "Table of Contents" text layer
    var textLayer = SketchLib.addTextLayer(group, {
      "name": "Table of Contents", "text": "Table of Contents", "fontSize": 44,
    });
    // set content position
    textLayer.frame().x = 100;
    textLayer.frame().y = 100;
    textLayer.textColor = MSColor.colorWithSVGString("#FFF");
    textLayer.fontPostscriptName = "Fira Sans Light Italic";

    var count = 0;
    var add = 1;
    var k = 1;
    
    // Create contents with all artboard names
    for(var i = 1; i < [artboards length]; i++) {
      var temp = artboards[numberArtboard-1-i];
      print("!!!???!!!");
      var l = (temp.children().toString().match(/</g) || []).length;
      
      if(l <= 1) ;
      else if(temp.children()[l-2].toString().split("Header")[1] == null) ;
      else {

        var header = temp.children()[l-2].toString().split("Header")[1].split(" ")[0];
        var title = temp.children()[l-2].overrides().toString().split("=")[2].split(";")[0].replace('"','').replace('"','');

        if(title.indexOf("cont") > -1) ;
        else {
          if(header == 2 && count != 0) {
            var textLayer = SketchLib.addTextLayer(group, {
              "name": [temp name], "text": "    " + (count) + "." + k + " " + title, "fontSize": userInput.fsize,
            });
            var numberLayer = SketchLib.addTextLayer(group, {
              "name": i+"", "text": i+"", "fontSize": userInput.fsize,
            });
            k++
          } else {
            count++;
            var textLayer = SketchLib.addTextLayer(group, {
              "name": [temp name], "text": (count) + ". " + title, "fontSize": userInput.fsize,
            });
            var numberLayer = SketchLib.addTextLayer(group, {
              "name": i+"", "text": i+"", "fontSize": userInput.fsize,
            });
            k = 1;
          }

          print([temp name]);print("!!!");
          // set content position
          textLayer.frame().x = 100;
          textLayer.frame().y = 100+add*(24+parseInt(userInput.margin)) + 120;
          textLayer.textColor = MSColor.colorWithSVGString("#FFF");
          textLayer.fontPostscriptName = "Fira Sans";

          numberLayer.frame().x = 500;
          numberLayer.frame().y = 100+add*(24+parseInt(userInput.margin)) + 120;
          numberLayer.textColor = MSColor.colorWithSVGString("#FFF");
          numberLayer.fontPostscriptName = "Fira Sans";

          add++;
        }
      }
    }

    // resize the group to contain its children
    [group resizeRoot:true];
    // center the view on our new group
    [[doc currentView] centerRect:[group rect]];
  }
};

// Show Dialog
function showAlertWindow() {
  var alertWindow = COSAlertWindow.new()
  alertWindow.setMessageText('Create Table of Contents')

  alertWindow.addTextLabelWithValue('Enter background color')
  alertWindow.addTextFieldWithValue('#3C96C7') 

  alertWindow.addTextLabelWithValue('Enter margin between contents')
  alertWindow.addTextFieldWithValue('20')

  alertWindow.addTextLabelWithValue('Enter contents font size')
  alertWindow.addTextFieldWithValue('20')

  alertWindow.addButtonWithTitle('OK')
  alertWindow.addButtonWithTitle('Cancel')

  if (alertWindow.runModal() == -NSModalResponseStop) {
      return new UserInput(
          alertWindow.viewAtIndex(1).stringValue(),
          alertWindow.viewAtIndex(3).stringValue(),
          alertWindow.viewAtIndex(5).stringValue()
      )
  } else {
      return null
  }
}

// Dialog Results
function UserInput(color, margin, fsize) {
    this.color = color
    this.margin = margin
    this.fsize = fsize
}